<project name="srpc" default="all" basedir=".">
  <property name="project" value="srpc"/>
  <property name="cc.dir" value="${basedir}/cruisecontrol"/>
  <property name="root.dir" value="${basedir}/.."/>
  <property name="build.dir" value="${basedir}"/>
  <property name="build.script" value="${build.dir}/rebuild_all_vc8.bat"/>
  <property name="unit.test.bin" value="${project}Test"/>
  <property name="bin.dir" value="${root.dir}/bin"/>
  <property name="lib.dir" value="${root.dir}/lib"/>
  <property name="build.log.dir" value="${root.dir}/build_log"/>
  <property name="test.log.dir" value="${build.log.dir}/test_log"/>
  <property name="test.result.dir" value="${root.dir}/test_result"/>

  <taskdef name="text2xml"
    classname="com.gb.bci.ant.taskdefs.TextToXml"
    classpath="${cc.dir}/TextToXml.jar"/>

  <target name="all" depends="init,builder,unittest" description="all"/>

  <target name="init" description="Setup build system">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${build.log.dir}" includes="**/*"/>
    </delete>
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${test.result.dir}" includes="**/*"/>
    </delete>
    <mkdir dir="${build.log.dir}"/>
    <mkdir dir="${test.result.dir}"/>
  </target>

  <target name="builder">
    <!-- to get correct resultproperty value, you should use "cmd.exe /c call XXX" -->
    <exec dir="${build.dir}" executable="cmd.exe"
      output="${build.log.dir}/${project}.log"
      failonerror="false"
      failifexecutionfails="false"
      resultproperty="build.result">
      <arg line="/C" />
      <arg line="CALL " />
      <arg line="${build.script} nowait" />
    </exec>

    <text2xml srcfile="${build.log.dir}/${project}.log"
      destfile="${build.log.dir}/${project}_log.xml"
      element="compilerlog"
      attribute="name"
      value="${project}"
    />

    <delete file="${build.log.dir}/${project}.log" quiet="true" />
    <concat destfile="${build.log.dir}/${project}.build">${build.result}</concat>

    <fail message="Build Failed!">
      <condition>
        <isfailure code="${build.result}"/>
      </condition>
    </fail>
  </target>

  <target name="unittest">
    <!-- Debug version -->
    <exec dir="${bin.dir}" executable="${bin.dir}/${unit.test.bin}_d.exe"
      output="${test.result.dir}/${unit.test.bin}_d.xml"
      failonerror="false"
      failifexecutionfails="false">
      <arg value="-xml"/>
    </exec>

    <!-- Release version -->
    <exec dir="${bin.dir}" executable="${bin.dir}/${unit.test.bin}.exe"
      output="${test.result.dir}/${unit.test.bin}.xml"
	    failonerror="false"
      failifexecutionfails="false">
      <arg value="-xml"/>
    </exec>

    <condition property = "test.failed">
      <equals arg1="${test.ret}" arg2="1"/>
    </condition>

    <!-- transform the cppunit xml file to junit xml file -->
    <xslt basedir="${test.result.dir}" destdir="${test.log.dir}"
      extension=".xml"
      style="${cc.dir}/cppunit2junit.xsl"/>

    <fail if="test.failed">
Unit tests failed. For error messages, check the log files in ${test.result.dir} or run "ant test-reports" to generate reports at ${test.result.dir}/reports.
    </fail>
  </target>
  
  <!-- task that use generated xml result, to produce html report: -->
  <target name="test-reports" description="Generate test reports from data collected after a running test">
    <mkdir dir="${test.result.dir}/reports"/>
    <junitreport todir="${test.result.dir}/reports">
      <fileset dir="${test.log.dir}">
        <include name="*.xml"/>
      </fileset>
      <report format="frames" todir="${test.result.dir}/reports"/>
    </junitreport>
  </target>

</project>

